{"version":3,"sources":["../../src/auth/executeAuthStrategies.ts"],"sourcesContent":["import type { GeneratedTypes } from '../index.js'\nimport type { AuthStrategyFunctionArgs, User } from './index.js'\n\nexport const executeAuthStrategies = async (\n  args: AuthStrategyFunctionArgs,\n): Promise<GeneratedTypes['user'] | null> => {\n  return args.payload.authStrategies.reduce(async (accumulatorPromise, strategy) => {\n    const authUser = await accumulatorPromise\n    if (!authUser) {\n      return strategy.authenticate(args)\n    }\n    return authUser\n  }, Promise.resolve(null))\n}\n"],"names":["executeAuthStrategies","args","payload","authStrategies","reduce","accumulatorPromise","strategy","authUser","authenticate","Promise","resolve"],"rangeMappings":";;;;;;;;","mappings":"AAGA,OAAO,MAAMA,wBAAwB,OACnCC;IAEA,OAAOA,KAAKC,OAAO,CAACC,cAAc,CAACC,MAAM,CAAC,OAAOC,oBAAoBC;QACnE,MAAMC,WAAW,MAAMF;QACvB,IAAI,CAACE,UAAU;YACb,OAAOD,SAASE,YAAY,CAACP;QAC/B;QACA,OAAOM;IACT,GAAGE,QAAQC,OAAO,CAAC;AACrB,EAAC"}