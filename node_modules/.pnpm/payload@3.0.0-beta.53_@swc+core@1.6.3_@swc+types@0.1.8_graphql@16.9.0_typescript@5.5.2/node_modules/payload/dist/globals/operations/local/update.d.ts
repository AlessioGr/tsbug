import type { DeepPartial } from 'ts-essentials';
import type { GeneratedTypes, Payload, RequestContext } from '../../../index.js';
import type { Document, PayloadRequestWithData } from '../../../types/index.js';
export type Options<TSlug extends keyof GeneratedTypes['globals']> = {
    context?: RequestContext;
    data: DeepPartial<Omit<GeneratedTypes['globals'][TSlug], 'id'>>;
    depth?: number;
    draft?: boolean;
    fallbackLocale?: GeneratedTypes['locale'];
    locale?: GeneratedTypes['locale'];
    overrideAccess?: boolean;
    req?: PayloadRequestWithData;
    showHiddenFields?: boolean;
    slug: TSlug;
    user?: Document;
};
export default function updateLocal<TSlug extends keyof GeneratedTypes['globals']>(payload: Payload, options: Options<TSlug>): Promise<GeneratedTypes['globals'][TSlug]>;
//# sourceMappingURL=update.d.ts.map