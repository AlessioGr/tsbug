import type { DeepPartial } from 'ts-essentials';
import type { GeneratedTypes } from '../../index.js';
import type { PayloadRequestWithData, Where } from '../../types/index.js';
import type { BulkOperationResult, Collection } from '../config/types.js';
import type { CreateUpdateType } from './create.js';
export type Arguments<T extends CreateUpdateType> = {
    collection: Collection;
    data: DeepPartial<T>;
    depth?: number;
    disableVerificationEmail?: boolean;
    draft?: boolean;
    overrideAccess?: boolean;
    overwriteExistingFiles?: boolean;
    req: PayloadRequestWithData;
    showHiddenFields?: boolean;
    where: Where;
};
export declare const updateOperation: <TSlug extends string | number | symbol>(incomingArgs: Arguments<GeneratedTypes['collections'][TSlug]>) => Promise<BulkOperationResult<TSlug>>;
//# sourceMappingURL=update.d.ts.map