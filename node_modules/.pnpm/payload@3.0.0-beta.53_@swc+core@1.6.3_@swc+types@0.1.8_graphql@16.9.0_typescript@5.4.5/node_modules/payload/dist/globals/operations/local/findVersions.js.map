{"version":3,"sources":["../../../../src/globals/operations/local/findVersions.ts"],"sourcesContent":["import type { PaginatedDocs } from '../../../database/types.js'\nimport type { GeneratedTypes, Payload, RequestContext } from '../../../index.js'\nimport type { Document, PayloadRequestWithData, Where } from '../../../types/index.js'\nimport type { TypeWithVersion } from '../../../versions/types.js'\n\nimport { APIError } from '../../../errors/index.js'\nimport { createLocalReq } from '../../../utilities/createLocalReq.js'\nimport { findVersionsOperation } from '../findVersions.js'\n\nexport type Options<T extends keyof GeneratedTypes['globals']> = {\n  context?: RequestContext\n  depth?: number\n  fallbackLocale?: GeneratedTypes['locale']\n  limit?: number\n  locale?: 'all' | GeneratedTypes['locale']\n  overrideAccess?: boolean\n  page?: number\n  req?: PayloadRequestWithData\n  showHiddenFields?: boolean\n  slug: T\n  sort?: string\n  user?: Document\n  where?: Where\n}\n\nexport default async function findVersionsLocal<T extends keyof GeneratedTypes['globals']>(\n  payload: Payload,\n  options: Options<T>,\n): Promise<PaginatedDocs<TypeWithVersion<GeneratedTypes['globals'][T]>>> {\n  const {\n    slug: globalSlug,\n    depth,\n    limit,\n    overrideAccess = true,\n    page,\n    showHiddenFields,\n    sort,\n    where,\n  } = options\n\n  const globalConfig = payload.globals.config.find((config) => config.slug === globalSlug)\n\n  if (!globalConfig) {\n    throw new APIError(`The global with slug ${String(globalSlug)} can't be found.`)\n  }\n\n  return findVersionsOperation({\n    depth,\n    globalConfig,\n    limit,\n    overrideAccess,\n    page,\n    req: await createLocalReq(options, payload),\n    showHiddenFields,\n    sort,\n    where,\n  })\n}\n"],"names":["APIError","createLocalReq","findVersionsOperation","findVersionsLocal","payload","options","slug","globalSlug","depth","limit","overrideAccess","page","showHiddenFields","sort","where","globalConfig","globals","config","find","String","req"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;","mappings":"AAKA,SAASA,QAAQ,QAAQ,2BAA0B;AACnD,SAASC,cAAc,QAAQ,uCAAsC;AACrE,SAASC,qBAAqB,QAAQ,qBAAoB;AAkB1D,eAAe,eAAeC,kBAC5BC,OAAgB,EAChBC,OAAmB;IAEnB,MAAM,EACJC,MAAMC,UAAU,EAChBC,KAAK,EACLC,KAAK,EACLC,iBAAiB,IAAI,EACrBC,IAAI,EACJC,gBAAgB,EAChBC,IAAI,EACJC,KAAK,EACN,GAAGT;IAEJ,MAAMU,eAAeX,QAAQY,OAAO,CAACC,MAAM,CAACC,IAAI,CAAC,CAACD,SAAWA,OAAOX,IAAI,KAAKC;IAE7E,IAAI,CAACQ,cAAc;QACjB,MAAM,IAAIf,SAAS,CAAC,qBAAqB,EAAEmB,OAAOZ,YAAY,gBAAgB,CAAC;IACjF;IAEA,OAAOL,sBAAsB;QAC3BM;QACAO;QACAN;QACAC;QACAC;QACAS,KAAK,MAAMnB,eAAeI,SAASD;QACnCQ;QACAC;QACAC;IACF;AACF"}